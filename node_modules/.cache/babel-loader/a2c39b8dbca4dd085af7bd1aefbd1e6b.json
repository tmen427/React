{"ast":null,"code":"var _jsxFileName = \"/Users/tmonnie/Desktop/react-pratice/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      friends,\n      topscore: 0,\n      id\n    };\n\n    this.removeFriend = id => {\n      // const newFriends = this.state.friends.filter(friend => friend.id !== id);   //friends will become less when you click on them. but how do you add htem back?s\n      console.log('id:' + id); //gives whatever id that you r on \n\n      const newFriends = this.state.friends.filter(friend => friend.id === id); //console.log(newFriends);\n\n      const rename = this.state.friends.sort(() => 0.5 - Math.random());\n      this.setState({\n        friends: rename\n      }); //  this.setState({ friends: newFriends });    \n    };\n\n    this.x = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n      this.setState({\n        topscore: this.state.topscore + 1\n      });\n      const rename = this.state.friends.sort(() => 0.5 - Math.random());\n      this.setState({\n        friends: rename\n      }); // if a picture is clicked a second time restart the pictures again\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Click on an Image to raise your score, but don't click on an image twice!\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"  Score: \", this.state.count, \"   \"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"  Top Score: \", this.state.topscore), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      count: this.state.count //reveals the state count\n      ,\n      counter: this.x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tmonnie/Desktop/react-pratice/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","count","topscore","id","removeFriend","console","log","newFriends","filter","friend","rename","sort","Math","random","setState","x","render","map","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,KAAK,EAAC,CADA;AAENH,MAAAA,OAFM;AAGNI,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA;AAJM,KAFkB;;AAAA,SAU5BC,YAV4B,GAUbD,EAAE,IAAI;AAElB;AAEHE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQH,EAApB,EAJqB,CAIK;;AAE1B,YAAMI,UAAU,GAAG,KAAKP,KAAL,CAAWF,OAAX,CAAmBU,MAAnB,CAA0BC,MAAM,IAAGA,MAAM,CAACN,EAAP,KAAYA,EAA/C,CAAnB,CANqB,CAOrB;;AAIA,YAAMO,MAAM,GAAG,KAAKV,KAAL,CAAWF,OAAX,CAAmBa,IAAnB,CAAyB,MAAK,MAAIC,IAAI,CAACC,MAAL,EAAlC,CAAf;AACA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAACY;AAAT,OAAd,EAZqB,CAapB;AAEA,KAzB2B;;AAAA,SA4B5BK,CA5B4B,GA4BxB,MAAK;AACT,WAAKD,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;AACA,WAAKa,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,GAAqB;AAAhC,OAAd;AAEA,YAAMQ,MAAM,GAAG,KAAKV,KAAL,CAAWF,OAAX,CAAmBa,IAAnB,CAAyB,MAAK,MAAIC,IAAI,CAACC,MAAL,EAAlC,CAAf;AAEA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAACY;AAAT,OAAd,EANS,CAUT;AAGC,KAzC2B;AAAA;;AA6C1B;AACAM,EAAAA,MAAM,GAAG;AACP,WAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiB,KAAKhB,KAAL,CAAWC,KAA5B,QAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqB,KAAKD,KAAL,CAAWE,QAAhC,CAHF,EAKG,KAAKF,KAAL,CAAWF,OAAX,CAAmBmB,GAAnB,CAAuBR,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKL,YADrB;AAEE,MAAA,EAAE,EAAEK,MAAM,CAACN,EAFb;AAGE,MAAA,GAAG,EAAEM,MAAM,CAACN,EAHd;AAIE,MAAA,IAAI,EAAEM,MAAM,CAACS,IAJf;AAKE,MAAA,KAAK,EAAET,MAAM,CAACU,KALhB;AAME,MAAA,UAAU,EAAEV,MAAM,CAACW,UANrB;AAOE,MAAA,QAAQ,EAAEX,MAAM,CAACY,QAPnB;AAQE,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,KARpB,CAQ4B;AAR5B;AASE,MAAA,OAAO,EAAE,KAAKc,CAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALH,CAFF;AAyBD;;AAxEyB;;AA2E5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count:0,\n    friends, \n    topscore: 0,\n    id, \n  };\n\n\nremoveFriend = id => {\n  \n   // const newFriends = this.state.friends.filter(friend => friend.id !== id);   //friends will become less when you click on them. but how do you add htem back?s\n\nconsole.log('id:' + id);  //gives whatever id that you r on \n\nconst newFriends = this.state.friends.filter(friend=> friend.id===id );\n//console.log(newFriends);\n\n\n\nconst rename = this.state.friends.sort( ()=> 0.5-Math.random());\nthis.setState({friends:rename});\n //  this.setState({ friends: newFriends });    \n  \n};\n\n  \nx = ()=> {\nthis.setState({count: this.state.count + 1 })\nthis.setState({topscore: this.state.topscore +1 })\n\nconst rename = this.state.friends.sort( ()=> 0.5-Math.random());\n\nthis.setState({friends:rename});\n\n\n\n// if a picture is clicked a second time restart the pictures again\n\n\n}\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n    \n      <Wrapper>\n        <h1>Click on an Image to raise your score, but don't click on an image twice!</h1>\n        <Title>  Score: {this.state.count}   </Title>\n        <Title>  Top Score: {this.state.topscore}</Title>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            count={this.state.count}  //reveals the state count\n            counter={this.x}\n\n\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
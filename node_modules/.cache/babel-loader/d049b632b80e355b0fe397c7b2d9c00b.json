{"ast":null,"code":"var _jsxFileName = \"/Users/tmonnie/Desktop/react-pratice/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport { timingSafeEqual } from \"crypto\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      friends,\n      topscore: 0,\n      clicked: 0,\n      id: '',\n      array: [10, 20, 30],\n      list: []\n    };\n\n    this.removeFriend = id => {\n      this.setState({\n        id: id\n      }); // const newFriends = this.state.friends.filter(friend => friend.id !== id);   //friends will become less when you click on them. but how do you add htem back?s\n\n      const rename = this.state.friends.sort(() => 0.5 - Math.random());\n      this.setState({\n        friends: rename\n      });\n      const newFriends = this.state.friends.filter(friend => friend.id === id);\n      console.log(newFriends);\n      this.setState({\n        count: this.state.count + 1\n      });\n\n      if (id === 1) {\n        this.setState({\n          count: 0\n        }); //set count back to 0\n\n        alert('crap');\n      }\n\n      this.setState({\n        clicked: this.state.clicked + 1\n      });\n\n      if (this.state.clicked >= 1) {// console.log('more then once');\n      }\n    };\n\n    this.x = () => {\n      this.setState({\n        topscore: this.state.topscore + 1\n      });\n      this.setState({\n        count: this.state.count + 1\n      });\n      const rename = this.state.friends.sort(() => 0.5 - Math.random());\n      this.setState({\n        friends: rename\n      });\n    };\n\n    this.makearray = id => {\n      //  this.setState(state => {\n      const array = this.state.array.concat(id);\n      this.setState({\n        array: array\n      });\n      console.log(this.state.array[0]); //}\n      //)\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Click on an Image to raise your score, but don't click on an image twice!\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"  Score: \", this.state.count, \"   \"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"  Top Score: \", this.state.topscore), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      count: this.state.count //reveals the state count\n      ,\n      counter: this.x,\n      makearray: this.makearray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tmonnie/Desktop/react-pratice/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","timingSafeEqual","App","state","count","topscore","clicked","id","array","list","removeFriend","setState","rename","sort","Math","random","newFriends","filter","friend","console","log","alert","x","makearray","concat","render","map","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport { timingSafeEqual } from \"crypto\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count:0,\n    friends, \n    topscore: 0, \n    clicked: 0,\n    id: '',\n    array: [10,20,30],\n    list: []\n  };\n\n\nremoveFriend = id => {\n  this.setState({id:id});\n   // const newFriends = this.state.friends.filter(friend => friend.id !== id);   //friends will become less when you click on them. but how do you add htem back?s\n\n\n\nconst rename = this.state.friends.sort( ()=> 0.5-Math.random());\nthis.setState({friends:rename});\n\nconst newFriends = this.state.friends.filter(friend=> friend.id===id );\nconsole.log(newFriends);\nthis.setState({count: this.state.count + 1 })\n\nif (id===1) {\nthis.setState({count: 0})  //set count back to 0\nalert('crap');\n}\n\n\n\nthis.setState({clicked: this.state.clicked+1});\n\nif (this.state.clicked>=1) {\n // console.log('more then once');\n}\n\n  \n};\n\n  \nx = ()=> {\n\nthis.setState({topscore: this.state.topscore +1 })\nthis.setState({count: this.state.count + 1 })\nconst rename = this.state.friends.sort( ()=> 0.5-Math.random());\nthis.setState({friends:rename});\n\n\n}\n\nmakearray = (id) => {\n\n     //  this.setState(state => {\n      const array = this.state.array.concat(id);\n      this.setState({array: array })\n      console.log(this.state.array[0]);\n\n//}\n//)\n}\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n    \n      <Wrapper>\n        <h1>Click on an Image to raise your score, but don't click on an image twice!</h1>\n        <Title>  Score: {this.state.count}   </Title>\n        <Title>  Top Score: {this.state.topscore}</Title>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            count={this.state.count}  //reveals the state count\n            counter={this.x}\n            makearray={this.makearray}\n\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
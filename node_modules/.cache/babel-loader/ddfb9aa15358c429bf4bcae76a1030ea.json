{"ast":null,"code":"var _jsxFileName = \"/Users/tmonnie/Desktop/react-pratice/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Counter from \"./components/Counter.js\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      count: 0\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id === id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.counter = id => {\n      const count = count++;\n      this.setState({\n        count\n      });\n      console.log(count);\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Friends List \", React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      counter: this.counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tmonnie/Desktop/react-pratice/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Counter","App","state","count","removeFriend","id","filter","friend","setState","counter","console","log","render","map","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNH,MAAAA,OADM;AAENI,MAAAA,KAAK,EAAE;AAFD,KAFkB;;AAAA,SAO1BC,YAP0B,GAOXC,EAAE,IAAI;AACnB;AACA,YAAMN,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAX,CAAmBO,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACF,EAAP,KAAcA,EAAlD,CAAhB,CAFmB,CAGnB;;AACA,WAAKG,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAZyB;;AAAA,SAc1BU,OAd0B,GAchBJ,EAAE,IAAG;AACb,YAAMF,KAAK,GAAGA,KAAK,EAAnB;AACF,WAAKK,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACC,KAlByB;AAAA;;AAoB1B;AACAS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADF,EAEG,KAAKV,KAAL,CAAWH,OAAX,CAAmBc,GAAnB,CAAuBN,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKH,YADrB;AAEE,MAAA,EAAE,EAAEG,MAAM,CAACF,EAFb;AAGE,MAAA,GAAG,EAAEE,MAAM,CAACF,EAHd;AAIE,MAAA,IAAI,EAAEE,MAAM,CAACO,IAJf;AAKE,MAAA,KAAK,EAAEP,MAAM,CAACQ,KALhB;AAME,MAAA,UAAU,EAAER,MAAM,CAACS,UANrB;AAOE,MAAA,QAAQ,EAAET,MAAM,CAACU,QAPnB;AAQE,MAAA,OAAO,EAAG,KAAKR,OARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAiBD;;AAvCyB;;AA0C5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Counter from \"./components/Counter.js\"\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    count: 0\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id === id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  counter = id=> {\n    const count = count++; \n  this.setState({count})\n  console.log(count);\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List <Counter></Counter></Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            counter= {this.counter}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
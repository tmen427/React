{"ast":null,"code":"var _jsxFileName = \"/Users/tmonnie/Desktop/react-pratice/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      friends\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends if ids not equal keep them. think about javascript filter method\n      const newFriends = this.state.friends.filter(friend => friend.id !== id); //friends will become less when you click on them. but how do you add htem back?s\n      // logic here to change to reshuffle the images\n\n      this.setState({\n        friends: newFriends\n      });\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.x = () => {\n      this.setState({\n        count: this.state.count + 1\n      }); //reloads all the friends \n\n      const shuffle = this.state.friends.map(friend => Math.ceil(friend.id * Math.random())); //will only return id that greater than five, need to scramble this\n      // now they r numbers need to rechange into names....\n\n      const getName = this.state.friends.map(shuffle => shuffle.id);\n      console.log(\"shuffle:\" + shuffle); // shuffled numbers you need to match it with names though\n      //const worup = this.state.friends.map(friend=>friend.name);\n      //console.log(worup);\n\n      let randomstuff = Math.ceil(Math.random() * Math.floor(14)); //will choose a number between 1 and 14\n\n      console.log(randomstuff);\n      const rename = shuffle.filter(friend => friend > 0); //u must use filter\n      //will return a new json object called renames\n\n      console.log('rename:' + rename);\n      this.setState({\n        friends: rename\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Click on an Image to raise your score, but don't click on an image twice!\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"  Score: \", this.state.count, \"   \"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      count: this.state.count //reveals the state count\n      ,\n      counter: this.x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tmonnie/Desktop/react-pratice/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","count","removeFriend","id","newFriends","filter","friend","setState","x","shuffle","map","Math","ceil","random","getName","console","log","randomstuff","floor","rename","render","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count:0,\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends if ids not equal keep them. think about javascript filter method\n    const newFriends = this.state.friends.filter(friend => friend.id !== id);   //friends will become less when you click on them. but how do you add htem back?s\n// logic here to change to reshuffle the images\n\n   this.setState({ friends: newFriends });    \n\n    this.setState({count: this.state.count + 1});\n    \n  };\n \n  x = ()=> {\nthis.setState({count: this.state.count + 1 })\n\n//reloads all the friends \nconst shuffle = this.state.friends.map(friend=> Math.ceil(friend.id*Math.random()));    //will only return id that greater than five, need to scramble this\n// now they r numbers need to rechange into names....\nconst getName = this.state.friends.map(shuffle=>shuffle.id);\n\nconsole.log(\"shuffle:\" + shuffle);// shuffled numbers you need to match it with names though\n//const worup = this.state.friends.map(friend=>friend.name);\n//console.log(worup);\nlet randomstuff = Math.ceil(Math.random()*Math.floor(14));  //will choose a number between 1 and 14\n\nconsole.log(randomstuff);\nconst rename = shuffle.filter(friend=> friend>0);   //u must use filter\n     //will return a new json object called renames\nconsole.log('rename:'  +  rename);\nthis.setState({friends:rename});\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n    \n      <Wrapper>\n        <h1>Click on an Image to raise your score, but don't click on an image twice!</h1>\n        <Title>  Score: {this.state.count}   </Title>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            count={this.state.count}  //reveals the state count\n            counter={this.x}\n\n\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}